<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bảng điều khiển - English with Thành Nam</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Be+Vietnam+Pro:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body { font-family: 'Be Vietnam Pro', sans-serif; }
    </style>
</head>
<body class="bg-gray-100">

    <header class="bg-white shadow-md">
        <nav class="container mx-auto px-6 py-4 flex justify-between items-center">
            <div class="text-2xl font-bold text-indigo-600">English with Thành Nam</div>
            <div>
                <span id="user-display-name" class="text-gray-700 mr-4"></span>
                <button id="logout-button" class="bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600">Đăng xuất</button>
            </div>
        </nav>
    </header>

    <main class="container mx-auto px-6 py-8">
        <div id="loading-state" class="text-center">
            <p class="text-lg text-gray-600">Đang tải dữ liệu lớp học...</p>
        </div>

        <div id="main-content" class="hidden">
            <!-- Vùng chọn lớp học -->
            <div class="mb-8">
                <label for="class-selector" class="block text-lg font-medium text-gray-700 mb-2">Chọn lớp học của bạn:</label>
                <select id="class-selector" class="block w-full md:w-1/2 p-3 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500">
                    <option>Vui lòng chọn một lớp...</option>
                </select>
            </div>

            <!-- Vùng hiển thị bài tập -->
            <div>
                <h2 class="text-2xl font-bold text-gray-800 mb-4">Bài tập về nhà</h2>
                <div id="assignments-list" class="space-y-4">
                    <!-- Bài tập sẽ được chèn vào đây bằng JavaScript -->
                </div>
            </div>
        </div>
    </main>

    <script src="https://www.gstatic.com/firebasejs/8.10.1/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.1/firebase-auth.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.1/firebase-firestore.js"></script>
    <script>
const firebaseConfig = {
  apiKey: "AIzaSyCRaRV5JEwXlHWSPSrCYxyIIPjDWFMsV9A",
  authDomain: "ielts-foundation-6ea9d.firebaseapp.com",
  projectId: "ielts-foundation-6ea9d",
  storageBucket: "ielts-foundation-6ea9d.firebasestorage.app",
  messagingSenderId: "296690693780",
  appId: "1:296690693780:web:f9a54a9ded68a73dcd2681",
  measurementId: "G-CZD89F0FC3"
};
        
        if (!firebase.apps.length) {
            firebase.initializeApp(firebaseConfig);
        }
        const auth = firebase.auth();
        const db = firebase.firestore();

        // DOM Elements
        const loadingState = document.getElementById('loading-state');
        const mainContent = document.getElementById('main-content');
        const userDisplayName = document.getElementById('user-display-name');
        const classSelector = document.getElementById('class-selector');
        const assignmentsList = document.getElementById('assignments-list');
        const logoutButton = document.getElementById('logout-button');

        auth.onAuthStateChanged(async user => {
            if (user) {
                // User is signed in.
                userDisplayName.textContent = user.displayName || user.email;
                await loadUserClasses(user.uid);
                mainContent.classList.remove('hidden');
                loadingState.classList.add('hidden');
            } else {
                // No user is signed in. Redirect to login.
                window.location.href = 'login.html';
            }
        });

        async function loadUserClasses(userId) {
            try {
                const userDoc = await db.collection('users').doc(userId).get();
                if (!userDoc.exists) {
                    console.log('Không tìm thấy thông tin user.');
                    return;
                }
                const userData = userDoc.data();
                const enrolledClasses = userData.enrolledClasses || [];

                if (enrolledClasses.length === 0) {
                    classSelector.innerHTML = '<option>Bạn chưa được ghi danh vào lớp nào.</option>';
                    return;
                }

                // Lấy thông tin chi tiết của từng lớp
                const classPromises = enrolledClasses.map(classId => db.collection('classes').doc(classId).get());
                const classDocs = await Promise.all(classPromises);

                classSelector.innerHTML = '<option value="">-- Chọn lớp học --</option>'; // Reset
                classDocs.forEach(doc => {
                    if (doc.exists) {
                        const classData = doc.data();
                        const option = document.createElement('option');
                        option.value = doc.id;
                        option.textContent = classData.className;
                        classSelector.appendChild(option);
                    }
                });

            } catch (error) {
                console.error("Lỗi khi tải lớp học:", error);
            }
        }

        classSelector.addEventListener('change', async (e) => {
            const selectedClassId = e.target.value;
            if (!selectedClassId) {
                assignmentsList.innerHTML = '';
                return;
            }
            await loadAssignments(selectedClassId);
        });
        
        async function loadAssignments(classId) {
            assignmentsList.innerHTML = '<p>Đang tải bài tập...</p>';
            try {
                const snapshot = await db.collection('assignments')
                                         .where('classId', '==', classId)
                                         .orderBy('assignmentDate', 'desc')
                                         .get();

                if (snapshot.empty) {
                    assignmentsList.innerHTML = '<p>Lớp này chưa có bài tập nào.</p>';
                    return;
                }

                assignmentsList.innerHTML = ''; // Clear loading message
                snapshot.forEach(doc => {
                    const assignment = doc.data();
                    const assignmentDate = assignment.assignmentDate.toDate().toLocaleDateString('vi-VN');
                    
                    const assignmentEl = document.createElement('a');
                    assignmentEl.href = `assignment.html?id=${doc.id}`;
                    assignmentEl.className = 'block bg-white p-6 rounded-lg shadow hover:shadow-lg transition-shadow';
                    
                    assignmentEl.innerHTML = `
                        <div class="flex justify-between items-center">
                            <div>
                                <h3 class="text-xl font-bold text-gray-800">${assignment.title}</h3>
                                <p class="text-sm text-gray-500">Ngày giao: ${assignmentDate}</p>
                            </div>
                            <div class="text-right">
                                <!-- Trạng thái sẽ được cập nhật sau -->
                                <span class="px-3 py-1 text-sm font-semibold text-yellow-800 bg-yellow-200 rounded-full">Chưa làm</span>
                            </div>
                        </div>
                    `;
                    assignmentsList.appendChild(assignmentEl);
                });

            } catch (error) {
                console.error("Lỗi khi tải bài tập:", error);
                assignmentsList.innerHTML = '<p class="text-red-500">Đã xảy ra lỗi khi tải bài tập.</p>';
            }
        }

        logoutButton.addEventListener('click', () => {
            auth.signOut().then(() => {
                window.location.href = 'index.html';
            });
        });
    </script>
</body>
</html>
